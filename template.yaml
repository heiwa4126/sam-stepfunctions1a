AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-stepfunctions1

  Sample SAM Template for sam-stepfunctions1
  See https://docs.aws.amazon.com/step-functions/latest/dg/tutorial-creating-lambda-state-machine.html

Globals:
  Function:
    Timeout: 3
    Runtime: nodejs14.x
    Architectures:
      - x86_64
  Api:
    OpenApiVersion: 3.0.3

Resources:
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: hello-world/
      Handler: app.handler
      Policies:
        - S3CrudPolicy: # 作成、読み取り、更新、および削除許可
            BucketName: !Ref SFS3Bucket

  HelloWorldFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: HelloWorldFunction
    Properties:
      RetentionInDays: 7
      LogGroupName: !Sub "/aws/lambda/${HelloWorldFunction}"

  SFS3Bucket:
    # このステップでは使用しないが一応
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True

  # SAMの AWS::Serverless::StateMachine を使う例

  # HelloWorldStateMachine:
  #   Type: AWS::Serverless::StateMachine
  #   DependsOn: HelloWorldStateMachineLogGroup
  #   Properties:
  #     Definition:
  #       Comment: A Hello World example of the Amazon States Language using an AWS Lambda function
  #       StartAt: HelloWorld
  #       States:
  #         HelloWorld:
  #           Type: Task
  #           Resource: !GetAtt HelloWorldFunction.Arn
  #           End: true
  #     Type: STANDARD
  #     Logging:
  #       Destinations:
  #         - CloudWatchLogsLogGroup:
  #             LogGroupArn: !GetAtt HelloWorldStateMachineLogGroup.Arn
  #       IncludeExecutionData: true
  #       Level: ALL              # loggingのテスト。普通はERRORで十分
  #       # Level: ERROR
  #     Policies:
  #       - LambdaInvokePolicy:
  #           FunctionName: !Ref HelloWorldFunction
  #       - Statement:
  #          - Effect: Allow
  #            Action:
  #              - logs:CreateLogDelivery
  #              - logs:GetLogDelivery
  #              - logs:UpdateLogDelivery
  #              - logs:DeleteLogDelivery
  #              - logs:ListLogDeliveries
  #              - logs:PutResourcePolicy
  #              - logs:DescribeResourcePolicies
  #              - logs:DescribeLogGroups
  #            Resource: !GetAtt HelloWorldStateMachineLogGroup.Arn
  #            # Resource: "*"
  #       - Statement:  # これは本当に必要かわからない。手動で作ったstepfunctionにはあったので
  #          - Effect: Allow
  #            Action:
  #              - xray:PutTraceSegments
  #              - xray:PutTelemetryRecords
  #              - xray:GetSamplingRules
  #              - xray:GetSamplingTargets
  #            Resource:
  #              - '*'  # 少々甘め

  # HelloWorldStateMachineLogGroup:
  #   Type: AWS::Logs::LogGroup
  #   # DependsOn: HelloWorldStateMachine
  #   Properties:
  #     RetentionInDays: 7
  #     LogGroupName: !Sub "/aws/vendedlogs/states/${HelloWorldStateMachine.Name}-Log"
  #     # サイズ制限を緩和するるため/aws/vendedlogs/の下につくる必要がある。
  #     # 参照: https://docs.aws.amazon.com/step-functions/latest/dg/bp-cwl.html

Outputs:
  HelloWorldFunctionName:
    Description: "Hello World Lambda Function Name"
    Value: !Ref HelloWorldFunction
  SFS3Bucket:
    Description: "S3 bucket for Step Functions example"
    Value: !Ref SFS3Bucket
  test1:
    Value: !Join
      - ""
      - - "/aws/vendedlogs/states/"
        - !Join
          - "-"
          - - !Ref AWS::StackName
            - "HelloWorldStateMachine"
            - !Select [0, !Split ["-", !Select [2, !Split [/, !Ref AWS::StackId ]]]]
            - "Log"
